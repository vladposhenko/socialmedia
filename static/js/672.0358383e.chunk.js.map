{"version":3,"file":"static/js/672.0358383e.chunk.js","mappings":"kLACA,GAAgB,QAAU,yBAAyB,aAAe,8BAA8B,OAAS,wBAAwB,OAAS,wBAAwB,SAAW,0BAA0B,QAAU,yBAAyB,gBAAkB,iCAAiC,WAAa,6B,SCU1S,EARgB,SAACA,GACb,OACI,gBAAKC,UAAWC,EAAAA,QAAhB,SAAkCF,EAAMG,W,UCOhD,EATmB,SAACH,GAChB,OACI,gBAAKC,UAAWC,EAAAA,OAAiB,IAAMA,EAAAA,OAAvC,UACI,SAAC,KAAD,CAASE,GAAI,YAAcJ,EAAMK,GAAjC,SAAsCL,EAAMM,U,iDCkClDC,GAAeC,EAAAA,EAAAA,GAAiB,KAChCC,GAAWC,EAAAA,EAAAA,IAAQ,YAYnBC,GAAsBC,EAAAA,EAAAA,GAAU,CAClCC,KAAM,wBADkBD,EAXL,SAACZ,GACpB,OACI,kBAAMc,SAAUd,EAAMe,aAAcd,UAAWC,EAAAA,WAA/C,WACY,SAACc,EAAA,EAAD,CAAOC,UAAWR,EAAUH,KAAK,iBAAiBY,YAAa,oBACxDC,SAAU,CAACC,EAAAA,EAASb,MAEnC,mBAAQN,UAAWC,EAAAA,QAAnB,wBAQZ,EA5CgB,SAACF,GACb,IAAIqB,EAAQrB,EAAMsB,YACdC,EAAiBF,EAAMG,QACtBC,KAAI,SAACC,GAAD,OAAY,SAAC,EAAD,CAAYpB,KAAMoB,EAAOpB,KAAsBD,GAAIqB,EAAOrB,IAAtBqB,EAAOrB,OAE5DsB,EAAmBN,EAAMO,SACxBH,KAAI,SAACtB,GAAD,OAAa,SAAC,EAAD,CAASA,QAASA,EAAQA,QAA0BE,GAAIF,EAAQE,IAAxBF,EAAQE,OAOtE,OAAKL,EAAM6B,QAEP,iBAAK5B,UAAWC,EAAAA,QAAhB,WACI,gBAAKD,UAAWC,EAAAA,aAAhB,SACKqB,KAEL,gBAAKtB,UAAWC,EAAAA,SAAhB,SACKyB,KAEL,oBACA,SAAChB,EAAD,CAAqBG,SAdd,SAACgB,GACZ9B,EAAM+B,YAAYD,EAAME,uBAGF,SAAC,KAAD,CAAU5B,GAAG,Y,oBCA3C,GAAe6B,E,QAAAA,KACXC,EAAAA,EAAAA,KAjBkB,SAACb,GACnB,MAAO,CACHC,YAAaD,EAAMC,YACnBO,OAAQR,EAAMc,KAAKN,WAIF,SAACO,GACtB,MAAO,CACHL,YAAa,SAACM,GACVD,GAASE,EAAAA,EAAAA,GAAmBD,SAQpCE,EAAAA,EAFJ,CAGEC","sources":["webpack://react-test2/./src/components/Dialogs/Dialogs.module.css?1b2e","components/Dialogs/Message/Message.jsx","components/Dialogs/DialogItem/DialogItem.jsx","components/Dialogs/Dialogs.jsx","components/Dialogs/DialogsContainer.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"dialogs\":\"Dialogs_dialogs__CiQzP\",\"dialogsItems\":\"Dialogs_dialogsItems__O5Kmk\",\"active\":\"Dialogs_active__Noya1\",\"dialog\":\"Dialogs_dialog__fSxnJ\",\"messages\":\"Dialogs_messages__13x62\",\"message\":\"Dialogs_message__+L4LA\",\"dialogsTextarea\":\"Dialogs_dialogsTextarea__RpI3d\",\"actionArea\":\"Dialogs_actionArea__xNHW0\"};","import classes from \"./../Dialogs.module.css\";\r\n\r\n\r\nconst Message = (props) => {\r\n    return (\r\n        <div className={classes.message}>{props.message}</div>\r\n    )\r\n}\r\n\r\n\r\n\r\nexport default Message;","import classes from \"./../Dialogs.module.css\";\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nconst DialogItem = (props) => {\r\n    return (\r\n        <div className={classes.dialog + ' ' + classes.active}>\r\n            <NavLink to={\"/dialogs/\" + props.id}>{props.name}</NavLink>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default DialogItem;","import React from 'react';\r\nimport classes from \"./Dialogs.module.css\";\r\nimport Message from \"./Message/Message\";\r\nimport DialogItem from \"./DialogItem/DialogItem\";\r\nimport { Navigate } from \"react-router-dom\";\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {Element} from \"../common/FormsControls/FormsControls\";\r\nimport {maxLengthCreator, required} from \"../../utilits/validators/validators\";\r\n\r\n\r\n\r\n\r\nconst Dialogs = (props) => {\r\n    let state = props.dialogsPage\r\n    let dialogElements = state.dialogs\r\n        .map((dialog) => <DialogItem name={dialog.name} key={dialog.id} id={dialog.id}/> )\r\n\r\n    let messagesElements = state.messages\r\n        .map((message) => <Message message={message.message} key={message.id} id={message.id}/>)\r\n\r\n\r\n    let onSubmit = (value) => {\r\n        props.sendMessage(value.newMessageBody)\r\n    }\r\n\r\n    if (!props.isAuth) return <Navigate to=\"/login\"/>\r\n    return (\r\n        <div className={classes.dialogs}>\r\n            <div className={classes.dialogsItems}>\r\n                {dialogElements}\r\n            </div>\r\n            <div className={classes.messages}>\r\n                {messagesElements}\r\n            </div>\r\n            <div></div>\r\n            <AddMessageFormRedux onSubmit={onSubmit} />\r\n        </div>\r\n    )\r\n}\r\n\r\nconst maxLength100 = maxLengthCreator(100)\r\nconst Textarea = Element(\"textarea\");\r\nconst AddMessageForm = (props) => {\r\n    return (\r\n        <form onSubmit={props.handleSubmit} className={classes.actionArea}>\r\n                    <Field component={Textarea} name=\"newMessageBody\" placeholder={'Enter the message'}\r\n                           validate={[required,maxLength100]}\r\n                    />\r\n            <button className={classes.sendBtn}>Send</button>\r\n        </form>\r\n    )\r\n}\r\n\r\nconst AddMessageFormRedux = reduxForm({\r\n    form: 'dialogAddMessageForm'\r\n})(AddMessageForm)\r\nexport default Dialogs;","import React from 'react';\r\nimport {sendMessageCreator} from \"../../Redux/dialogs-reducer\";\r\nimport Dialogs from \"./Dialogs\";\r\nimport {connect} from \"react-redux\";\r\nimport {withAuthRedirect} from \"../hoc/withAuthRedirect\";\r\nimport {compose} from \"redux\";\r\n\r\n\r\n// данные из state\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        dialogsPage: state.dialogsPage,\r\n        isAuth: state.auth.isAuth\r\n    }\r\n}\r\n// кооллбеки\r\nlet mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        sendMessage: (newMessage) => {\r\n            dispatch(sendMessageCreator(newMessage))\r\n        },\r\n    }\r\n}\r\n\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, mapDispatchToProps),\r\n    withAuthRedirect\r\n)(Dialogs);"],"names":["props","className","classes","message","to","id","name","maxLength100","maxLengthCreator","Textarea","Element","AddMessageFormRedux","reduxForm","form","onSubmit","handleSubmit","Field","component","placeholder","validate","required","state","dialogsPage","dialogElements","dialogs","map","dialog","messagesElements","messages","isAuth","value","sendMessage","newMessageBody","compose","connect","auth","dispatch","newMessage","sendMessageCreator","withAuthRedirect","Dialogs"],"sourceRoot":""}